@model E_Shop.ViewModels.PurchaseViewModel

<div class="container mt-5 bg-light p-5 rounded shadow">
    <div class="w-100">
        <h3 class="text-center text-primary mb-4">🛒 Purchase Entry</h3>
        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage as string))
        {
            <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
        }

        <form asp-action="Create">
            <input asp-for="PurchaseId" type="hidden" />

            <div class="row mb-4">
                <div class="col-md-6">
                    <label class="form-label fw-semibold">Supplier</label>
                    @Html.DropDownListFor(
                             model => model.SupplierId,
                             Model.Suppliers,
                             "-- Select Supplier --",
                             new { @class = "form-select" })
                    <span asp-validation-for="SupplierId" class="text-danger small"></span>
                </div>

                <div class="col-md-6">
                    <label class="form-label fw-semibold">Description</label>
                    <input asp-for="Description" class="form-control" placeholder="Enter description" />
                    <span asp-validation-for="Description" class="text-danger small"></span>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-6">
                    <label class="form-label fw-semibold">Grand Total</label>
                    <input asp-for="GrandTotal" class="form-control" readonly />
                </div>
            </div>

            <div class="table-responsive mb-4">
                <table class="table table-bordered align-middle text-center">
                    <thead class="table-primary">
                        <tr>
                            <th>Product</th>
                            <th>Qty</th>
                            <th>Price</th>
                            <th>VAT (%)</th>
                            <th>Sub Total</th>
                            <th>Store</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="detailsTable">
                        <tr>
                            <td>
                                @Html.DropDownListFor(
                                         model => model.ProductId,
                                         Model.Products,
                                         "-- Select Product --",
                                         new { @class = "form-select" })
                            </td>
                            <td>
                                <input asp-for="Quantity" class="form-control qty" value="0" onchange="calculateItem()" />
                            </td>
                            <td>
                                <input asp-for="Price" class="form-control price" value="0" onchange="calculateItem()" />
                            </td>
                            <td>
                                <input asp-for="Vat" class="form-control vat" value="0" onchange="calculateItem()" />
                            </td>
                            <td>
                                <input asp-for="SubTotal" class="form-control subtotal" readonly />
                            </td>
                            <td>
                                @Html.DropDownListFor(
                                         model => model.StoreId,
                                         Model.Stores,
                                         "-- Select Store --",
                                         new { @class = "form-select" })
                            </td>
                            <td>
                                <button type="button" class="btn btn-sm btn-success" onclick="addRow()">➕</button>
                            </td>
                        </tr>

                        @foreach (var item in Model.PurchaseDetails)
                        {
                            <tr>
                                <td>@item.ProductName</td>
                                <td>@item.Quantity</td>
                                <td>@item.Price</td>
                                <td>@item.Vat</td>
                                <td>@item.SubTotal</td>
                                <td>@item.StoreName</td>
                                <td>
                                    <a asp-action="RemoveDetail" asp-route-id="@item.PurchaseId" class="btn btn-sm btn-danger">Remove</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-between">
                <div>
                    <a asp-action="Index" class="btn btn-outline-secondary">⬅ Back to List</a>
                </div>
                <div>
                    <button type="submit" class="btn btn-primary">
                        @(Model.PurchaseId > 0 ? "💾 Save Change" : "💾 Save")
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- JavaScript -->
<script>
    function calculateItem() {
        const qty = parseFloat(document.querySelector(".qty").value) || 0;
        const price = parseFloat(document.querySelector(".price").value) || 0;
        const vat = parseFloat(document.querySelector(".vat").value) || 0;
        const subtotal = (qty * price) + ((qty * price) * (vat / 100));
        document.querySelector(".subtotal").value = subtotal.toFixed(2);
    }

    function addRow() {
        const table = document.getElementById("detailsTable");
        const firstRow = table.rows[0];
        const newRow = firstRow.cloneNode(true);

        newRow.querySelectorAll("input").forEach(input => {
            input.value = input.classList.contains("qty") ? 1 : 0;
            if (input.classList.contains("subtotal")) input.value = '';
        });

        const actionCell = newRow.cells[newRow.cells.length - 1];
        actionCell.innerHTML = `<button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">🗑️</button>`;

        table.appendChild(newRow);
    }

    function removeRow(button) {
        const row = button.closest("tr");
        const table = document.getElementById("detailsTable");
        if (table.rows.length > 1) {
            table.removeChild(row);
        }
    }
</script>
